{"ast":null,"code":"var _jsxFileName = \"D:\\\\Jag Practice\\\\React\\\\07 March\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { createRoot } from \"react-dom/client\";\n\n//import Home from \"./Pages/home\";\nimport Header from \"./Components/Header\";\nimport TextForm from \"./Components/TextForm\";\nimport Alert from \"./Components/Alert\";\nimport About from \"./Pages/About\";\n\n// import { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport { createBrowserRouter, RouterProvider, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Props Drilling\n  // const name2112ee = \"About Text is getting from App \";\n\n  const [mode, setDarkMode] = useState(\"light\");\n  const [btnText, setBtnText] = useState(\"Enable Dark Mode\");\n  const [moode, setDarkRedMode] = useState(\"light\");\n  const [alertText, setAlertText] = useState(null);\n  const showAlert = (message, type) => {\n    setAlertText({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlertText(null);\n    }, 2000);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setDarkMode(\"dark\");\n      setBtnText(\"Enable Light Mode\");\n      document.body.style.backgroundColor = \"#222\";\n      document.body.style.color = \"white\";\n      //  debugger;\n      showAlert(\"Dark mode has been enabled\", \"success\");\n\n      // document.title = \"TextUtils - Dark Mode \";\n      // setInterval(() => {\n      //   document.title = \"TextUtils is Amazing \";\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = \"Install TextUtils Now\";\n      // }, 1500);\n\n      // setDarkRedMode(\"dark\");\n    } else {\n      setDarkMode(\"light\");\n      setBtnText(\"Enable Dark Mode\");\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"#222\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n      // setDarkRedMode(\"light\");\n      setDarkRedMode(\"light\");\n      document.title = \"TextUtils - light Mode \";\n    }\n  };\n  const darkRedMode = () => {\n    if (moode === \"light\") {\n      setDarkRedMode(\"redDarkColor\");\n      document.body.style.backgroundColor = \"#ff0000\";\n      document.body.style.color = \"white\";\n    } else {\n      setDarkRedMode(\"light\");\n      document.body.style.backgroundColor = \"#ffffff\";\n      document.body.style.color = \"#000\";\n    }\n    alert(\"jk\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"router\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        title: \"Jagdish.com\",\n        aboutText: \"About Jagdish\",\n        mode: mode,\n        moode: moode,\n        toggleMode: toggleMode,\n        darkRedMode: darkRedMode,\n        btnText: btnText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alertText: alertText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          children: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(TextForm, {\n            Heading: \"Enter your text to Analyse\",\n            mode: mode,\n            showAlert: showAlert\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IJKLc0HWh3ZPlfwbdGGKj6Kwt+k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","createRoot","Header","TextForm","Alert","About","createBrowserRouter","RouterProvider","Route","Link","jsxDEV","_jsxDEV","App","_s","mode","setDarkMode","btnText","setBtnText","moode","setDarkRedMode","alertText","setAlertText","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","color","title","darkRedMode","alert","className","children","aboutText","fileName","_jsxFileName","lineNumber","columnNumber","Switch","path","Heading","_c","$RefreshReg$"],"sources":["D:/Jag Practice/React/07 March/my-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { createRoot } from \"react-dom/client\";\n\n//import Home from \"./Pages/home\";\nimport Header from \"./Components/Header\";\nimport TextForm from \"./Components/TextForm\";\nimport Alert from \"./Components/Alert\";\n\nimport About from \"./Pages/About\";\n\n// import { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport {\n  createBrowserRouter,\n  RouterProvider,\n  Route,\n  Link,\n} from \"react-router-dom\";\nfunction App() {\n  // Props Drilling\n  // const name2112ee = \"About Text is getting from App \";\n\n  const [mode, setDarkMode] = useState(\"light\");\n  const [btnText, setBtnText] = useState(\"Enable Dark Mode\");\n  const [moode, setDarkRedMode] = useState(\"light\");\n\n  const [alertText, setAlertText] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlertText({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlertText(null);\n    }, 2000);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setDarkMode(\"dark\");\n      setBtnText(\"Enable Light Mode\");\n      document.body.style.backgroundColor = \"#222\";\n      document.body.style.color = \"white\";\n      //  debugger;\n      showAlert(\"Dark mode has been enabled\", \"success\");\n\n      // document.title = \"TextUtils - Dark Mode \";\n      // setInterval(() => {\n      //   document.title = \"TextUtils is Amazing \";\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = \"Install TextUtils Now\";\n      // }, 1500);\n\n      // setDarkRedMode(\"dark\");\n    } else {\n      setDarkMode(\"light\");\n      setBtnText(\"Enable Dark Mode\");\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"#222\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n      // setDarkRedMode(\"light\");\n      setDarkRedMode(\"light\");\n      document.title = \"TextUtils - light Mode \";\n    }\n  };\n\n  const darkRedMode = () => {\n    if (moode === \"light\") {\n      setDarkRedMode(\"redDarkColor\");\n      document.body.style.backgroundColor = \"#ff0000\";\n      document.body.style.color = \"white\";\n    } else {\n      setDarkRedMode(\"light\");\n      document.body.style.backgroundColor = \"#ffffff\";\n      document.body.style.color = \"#000\";\n    }\n    alert(\"jk\");\n  };\n\n  return (\n    <div className=\"App\">\n      <router>\n        <Header\n          title=\"Jagdish.com\"\n          aboutText=\"About Jagdish\"\n          mode={mode}\n          moode={moode}\n          toggleMode={toggleMode}\n          darkRedMode={darkRedMode}\n          btnText={btnText}\n        />\n\n        <Alert alertText={alertText} />\n        <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/\">\n            <TextForm\n              Heading=\"Enter your text to Analyse\"\n              mode={mode}\n              showAlert={showAlert}\n            />\n          </Route>\n        </Switch>\n      </router>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}